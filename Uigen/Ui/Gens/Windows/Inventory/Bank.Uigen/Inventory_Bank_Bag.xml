<?xml version="1.0" encoding="utf-8"?>
<UIGen xmlns:c="http://datacontract.gib.me/cryptic" xmlns:a="http://schemas.microsoft.com/2003/10/Serialization/Arrays" xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://datacontract.gib.me/championsonline">
  <Name>Inventory_Bank_Bag</Name>
  <BorrowFrom>
    <UIGenBorrowed>
      <hGen>Inventory_Grid_Template</hGen>
    </UIGenBorrowed>
  </BorrowFrom>
  <FlatBorrowFrom>
    <UIGenBorrowed>
      <hGen>Behavior_Layoutbox</hGen>
    </UIGenBorrowed>
    <UIGenBorrowed>
      <hGen>Inventory_Grid_Template</hGen>
    </UIGenBorrowed>
  </FlatBorrowFrom>
  <RequiresBorrow />
  <BorrowedInlineChildren />
  <Type>LayoutBox</Type>
  <Base i:type="UIGenLayoutBox">
    <Type>LayoutBox</Type>
    <bf>
      <c:Field>{</c:Field>
      <c:Field>Width</c:Field>
      <c:Field>Height</c:Field>
      <c:Field>OffsetFrom</c:Field>
      <c:Field>Relative</c:Field>
      <c:Field>DragDrop</c:Field>
      <c:Field>Template</c:Field>
      <c:Field>ColumnsBlock</c:Field>
      <c:Field>ModelBlock</c:Field>
      <c:Field>}</c:Field>
    </bf>
    <X>None</X>
    <Y>None</Y>
    <PercentX>0</PercentX>
    <PercentY>0</PercentY>
    <Width>
      <Magnitude>1</Magnitude>
      <Unit>FitToContents</Unit>
    </Width>
    <Height>
      <Magnitude>1</Magnitude>
      <Unit>Percentage</Unit>
    </Height>
    <MinimumWidth>
      <Magnitude>0</Magnitude>
      <Unit>Fixed</Unit>
    </MinimumWidth>
    <MinimumHeight>
      <Magnitude>0</Magnitude>
      <Unit>Fixed</Unit>
    </MinimumHeight>
    <MaximumWidth>
      <Magnitude>0</Magnitude>
      <Unit>Fixed</Unit>
    </MaximumWidth>
    <MaximumHeight>
      <Magnitude>0</Magnitude>
      <Unit>Fixed</Unit>
    </MaximumHeight>
    <LeftMargin>None</LeftMargin>
    <RightMargin>None</RightMargin>
    <TopMargin>None</TopMargin>
    <BottomMargin>None</BottomMargin>
    <Scale>1</Scale>
    <OffsetFrom>TopLeft</OffsetFrom>
    <ScaleNoGrow>0</ScaleNoGrow>
    <ScaleNoShrink>0</ScaleNoShrink>
    <ScaleAsIfWithGlobal>0</ScaleAsIfWithGlobal>
    <ResetScale>0</ResetScale>
    <ClipToParent>0</ClipToParent>
    <ClipToScreen>0</ClipToScreen>
    <PositionOnScreen>0</PositionOnScreen>
    <IgnoreParentPadding>0</IgnoreParentPadding>
    <ScaleAsIf>
      <a:short>0</a:short>
      <a:short>0</a:short>
    </ScaleAsIf>
    <Relative>
      <TopFrom>
        <Name>_Previous</Name>
        <Offset>Bottom</Offset>
        <Spacing>CodeStep</Spacing>
      </TopFrom>
      <BottomFrom>
        <Name></Name>
        <Offset>Center</Offset>
        <Spacing>CodeHalfStep</Spacing>
      </BottomFrom>
      <LeftFrom>
        <Name></Name>
        <Offset>Center</Offset>
        <Spacing>CodeHalfStep</Spacing>
      </LeftFrom>
      <RightFrom>
        <Name></Name>
        <Offset>Center</Offset>
        <Spacing>CodeHalfStep</Spacing>
      </RightFrom>
    </Relative>
    <PostLayoutRelative i:nil="true" />
    <Anchor i:nil="true" />
    <Child />
    <InlineChild />
    <HideChild />
    <RemoveChild />
    <Assembly i:nil="true" />
    <Alpha>1</Alpha>
    <Tween i:nil="true" />
    <BeforeLayout i:nil="true" />
    <AfterLayout i:nil="true" />
    <BeforeTick i:nil="true" />
    <KeyAction />
    <DefaultKeyAction i:nil="true" />
    <ToolTip i:nil="true" />
    <Background i:nil="true" />
    <DragDrop>
      <UIGenDragDropAction>
        <TypeMatch>InventorySlot</TypeMatch>
        <Command />
        <ExpressionBlock>
          <_><![CDATA[
(
  str "GenInstanceData"
  str "InventorySlot"
)
call "Declaretype"
;
(
  ident "K_Shift"
)
call "Inputkeystate"
(
  ident "Dragdropdata"
  objpath ".Textpayload"
)
call "Inventorykeycount"
int 1
greater
and
jz label_96
(
  (
    str "Countslider"
  )
  call "Gen"
  str "ItemName"
  (
    (
      ident "Dragdropdata"
      objpath ".Textpayload"
    )
    call "Inventorykeygetitem"
  )
  call "Gengetitemname"
)
call "Gensetstring"
;
(
  (
    str "Countslider"
  )
  call "Gen"
  str "Inventorysourcekey"
  ident "Dragdropdata"
  objpath ".Textpayload"
)
call "Gensetstring"
;
(
  (
    str "Countslider"
  )
  call "Gen"
  str "Inventorydestkey"
  (
    static Player
    (
      static Self
      objpath ".Var[sharedbankent].Int"
      (
        static Player
      )
      call "Entgetsharedbankent"
      static Player
    )
    call "Chooseentity"
    static Self
    objpath ".Var[bagid].Int"
    str ""
  )
  call "Inventoryslotgetcontkey"
)
call "Gensetstring"
;
(
  (
    str "Countslider"
  )
  call "Gen"
  str "Count"
  (
    ident "Dragdropdata"
    objpath ".Textpayload"
  )
  call "Inventorykeycount"
)
call "Gensetvalue"
;
(
  (
    str "Countslider"
  )
  call "Gen"
  str "Move"
)
call "Gensendmessage"
return
label_96:
(
    ident "Dragdropdata"
    objpath ".Textpayload"
)
call "Inventorykeygetbagnumber"
ident "Bagidoffense"
equals
(
    ident "Dragdropdata"
    objpath ".Textpayload"
)
call "Inventorykeygetbagnumber"
ident "Bagiddefense"
equals
or
(
    ident "Dragdropdata"
    objpath ".Textpayload"
)
call "Inventorykeygetbagnumber"
ident "Bagidutility"
equals
or
(
    static GenInstanceData
    objpath ".Pitem"
)
call "Itemgetdefflags"
ident "Itemdefflagbindonequip"
binary and
and
(
    static GenInstanceData
    objpath ".Pitem"
)
call "Itemgetflags"
ident "Itemflagbound"
binary and
not
and
jz label_200
(
    (
      str "Inventory_Bindconfirmdialog"
    )
    call "Gen"
    str "Sourceinventorykey"
    (
      static Player
      (
        static Self
        objpath ".Var[sharedbankent].Int"
        (
          static Player
        )
        call "Entgetsharedbankent"
        static Player
      )
      call "Chooseentity"
      static Self
      objpath ".Var[bagid].Int"
      str ""
    )
    call "Inventoryslotgetcontkey"
)
call "Gensetstring"
;
(
    (
      str "Inventory_Bindconfirmdialog"
    )
    call "Gen"
    str "Destinventorybag"
    (
      ident "Dragdropdata"
      objpath ".Textpayload"
    )
    call "Inventorykeygetbagnumber"
)
call "Gensetvalue"
;
(
    (
      str "Inventory_Bindconfirmdialog"
    )
    call "Gen"
    str "Destinventoryslot"
    (
      ident "Dragdropdata"
      objpath ".Textpayload"
    )
    call "Inventorykeygetslotnumber"
)
call "Gensetvalue"
;
(
    (
      str "Inventory_Bindconfirmdialog"
    )
    call "Gen"
    str "Show"
)
call "Gensendmessage"
return
label_200:
(
    ident "Dragdropdata"
    objpath ".Textpayload"
    (
      static Player
      (
        static Self
        objpath ".Var[sharedbankent].Int"
        (
          static Player
        )
        call "Entgetsharedbankent"
        static Player
      )
      call "Chooseentity"
      static Self
      objpath ".Var[bagid].Int"
      (
        static GenInstanceData
        objpath ".Pchname"
      )
      call "Stringtoint"
    )
    call "Inventoryindexgetcontkey"
    int 1
    neg
)
call "Inventorykeymovekey"
]]></_>
          <Statement>
            <ExprLine>
              <DescStr></DescStr>
              <OrigStr>
				DeclareType("GenInstanceData", "InventorySlot");
				if (InputKeyState(K_SHIFT) and InventoryKeyCount(DragDropData.TextPayload) &gt; 1)
					GenSetString(Gen("CountSlider"), "ItemName", GenGetItemName(InventoryKeyGetItem(DragDropData.TextPayload)));
					GenSetString(Gen("CountSlider"), "InventorySourceKey", DragDropData.TextPayload);
					GenSetString(Gen("CountSlider"), "InventoryDestKey", InventorySlotGetContKey(Player, ChooseEntity(Self.Var[SharedBankEnt].Int, EntGetSharedBankEnt(Player), Player), Self.Var[BagID].Int, ""));
					GenSetValue(Gen("CountSlider"), "Count", InventoryKeyCount(DragDropData.TextPayload));
					GenSendMessage(Gen("CountSlider"), "Move");
				else
					# If the item is coming from an equip slot, need to do some convoluted checking for causing binding
					if ((InventoryKeyGetBagNumber(DragDropData.TextPayload) = BagIDOffense or
							InventoryKeyGetBagNumber(DragDropData.TextPayload) = BagIDDefense or
							InventoryKeyGetBagNumber(DragDropData.TextPayload) = BagIDUtility) and
							(ItemGetDefFlags(GenInstanceData.pItem) &amp; ItemDefFlagBindOnEquip) and
							(not ItemGetFlags(GenInstanceData.pItem) &amp; ItemFlagBound))
						GenSetString(Gen("Inventory_BindConfirmDialog"), "SourceInventoryKey", InventorySlotGetContKey(Player, ChooseEntity(Self.Var[SharedBankEnt].Int, EntGetSharedBankEnt(Player), Player), Self.Var[BagID].Int, ""));
						GenSetValue(Gen("Inventory_BindConfirmDialog"), "DestInventoryBag", InventoryKeyGetBagNumber(DragDropData.TextPayload));
						GenSetValue(Gen("Inventory_BindConfirmDialog"), "DestInventorySlot", InventoryKeyGetSlotNumber(DragDropData.TextPayload));
						GenSendMessage(Gen("Inventory_BindConfirmDialog"), "Show");
					else
						InventoryKeyMoveKey(DragDropData.TextPayload, InventoryIndexGetContKey(Player, ChooseEntity(Self.Var[SharedBankEnt].Int, EntGetSharedBankEnt(Player), Player), Self.Var[BagID].Int, StringToInt(GenInstanceData.pchName)), -1);
					endif
				endif
			</OrigStr>
            </ExprLine>
          </Statement>
          <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
          <Cost>0</Cost>
        </ExpressionBlock>
        <Sound>
          <a:string>UI/Inventory</a:string>
        </Sound>
        <EnterState />
        <ExitState />
        <ToggleState />
        <CopyParentState />
        <Mutate />
        <Message />
        <Set />
        <Focus>0</Focus>
        <Unfocus>0</Unfocus>
        <TooltipFocus>0</TooltipFocus>
        <TooltipUnfocus>0</TooltipUnfocus>
      </UIGenDragDropAction>
      <UIGenDragDropAction>
        <TypeMatch>Gem</TypeMatch>
        <Command />
        <ExpressionBlock>
          <_><![CDATA[
(
  str "GenInstanceData"
  str "InventorySlot"
)
call "Declaretype"
;
(
  (
    str "Gemslot_Window"
  )
  call "Gen"
  ident "Dragdropdata"
  objpath ".Intpayload"
)
call "Gemslotui_Isitemattached"
jz label_63
(
  (
    str "Gemslot_Unslotdialog"
  )
  call "Gen"
  str "Gemindex"
  ident "Dragdropdata"
  objpath ".Intpayload"
)
call "Gensetvalue"
;
(
  (
    str "Gemslot_Unslotdialog"
  )
  call "Gen"
  str "Targetslot"
  (
    static Player
    (
      static Self
      objpath ".Var[sharedbankent].Int"
      (
        static Player
      )
      call "Entgetsharedbankent"
      static Player
    )
    call "Chooseentity"
    static Self
    objpath ".Var[bagid].Int"
    static GenInstanceData
    objpath ".Pchname"
  )
  call "Inventoryslotgetcontkey"
)
call "Gensetstring"
;
(
  (
    str "Gemslot_Unslotdialog"
  )
  call "Gen"
  str "Show"
)
call "Gensendmessage"
return
label_63:
(
    (
      str "Gemslot_Window"
    )
    call "Gen"
    (
      static Player
      (
        static Self
        objpath ".Var[sharedbankent].Int"
        (
          static Player
        )
        call "Entgetsharedbankent"
        static Player
      )
      call "Chooseentity"
      static Self
      objpath ".Var[bagid].Int"
      static GenInstanceData
      objpath ".Pchname"
    )
    call "Inventoryslotgetcontkey"
    ident "Dragdropdata"
    objpath ".Intpayload"
    str ""
)
call "Gemslotui_Removegemfromitem"
]]></_>
          <Statement>
            <ExprLine>
              <DescStr></DescStr>
              <OrigStr>
				DeclareType("GenInstanceData", "InventorySlot");
				if (GemSlotUI_IsItemAttached(Gen("GemSlot_Window"), DragDropData.IntPayload))
					GenSetValue(Gen("GemSlot_UnslotDialog"), "GemIndex", DragDropData.IntPayload);
					GenSetString(Gen("GemSlot_UnslotDialog"), "TargetSlot", InventorySlotGetContKey(Player, ChooseEntity(Self.Var[SharedBankEnt].Int, EntGetSharedBankEnt(Player), Player), Self.Var[BagID].Int, GenInstanceData.pchName));
					GenSendMessage(Gen("GemSlot_UnslotDialog"), "Show");
				else
					GemSlotUI_RemoveGemFromItem(Gen("GemSlot_Window"), InventorySlotGetContKey(Player, ChooseEntity(Self.Var[SharedBankEnt].Int, EntGetSharedBankEnt(Player), Player), Self.Var[BagID].Int, GenInstanceData.pchName), DragDropData.IntPayload, "");
				endif
			</OrigStr>
            </ExprLine>
          </Statement>
          <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
          <Cost>0</Cost>
        </ExpressionBlock>
        <Sound />
        <EnterState />
        <ExitState />
        <ToggleState />
        <CopyParentState />
        <Mutate />
        <Message />
        <Set />
        <Focus>0</Focus>
        <Unfocus>0</Unfocus>
        <TooltipFocus>0</TooltipFocus>
        <TooltipUnfocus>0</TooltipUnfocus>
      </UIGenDragDropAction>
    </DragDrop>
    <DragCancelled i:nil="true" />
    <Message />
    <CenterX>
      <Magnitude>0.5</Magnitude>
      <Unit>Percentage</Unit>
    </CenterX>
    <CenterY>
      <Magnitude>0.5</Magnitude>
      <Unit>Percentage</Unit>
    </CenterY>
    <Rotate>
      <Angle>0</Angle>
      <Unit>Radians</Unit>
    </Rotate>
    <ShearX>0</ShearX>
    <ShearY>0</ShearY>
    <ScaleX>1</ScaleX>
    <ScaleY>1</ScaleY>
    <Cursor></Cursor>
    <Priority>0</Priority>
    <ResetAlpha>0</ResetAlpha>
    <Clip>0</Clip>
    <ResetClip>0</ResetClip>
    <CaptureMouse>0</CaptureMouse>
    <CaptureMouseWheel>0</CaptureMouseWheel>
    <FocusOnClick>0</FocusOnClick>
    <FocusOnCreate>0</FocusOnCreate>
    <KeepFocusOnCreate>0</KeepFocusOnCreate>
    <FocusByDefault>0</FocusByDefault>
    <FocusEveryFrame>0</FocusEveryFrame>
    <ClipInput>0</ClipInput>
    <ResetInputClip>0</ResetInputClip>
    <CopyChildPriority>0</CopyChildPriority>
    <ClipToPadding>0</ClipToPadding>
    <Template>InventorySlot</Template>
    <TemplateExprBlock i:nil="true" />
    <AspectRatio>0</AspectRatio>
    <ColumnsBlock>
      <_><![CDATA[
int 10
]]></_>
      <Statement>
        <ExprLine>
          <DescStr></DescStr>
          <OrigStr> 10 </OrigStr>
        </ExprLine>
      </Statement>
      <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
      <Cost>0</Cost>
    </ColumnsBlock>
    <Rows>0</Rows>
    <LayoutDirection>Center</LayoutDirection>
    <LayoutOrder>CenterHorizontal</LayoutOrder>
    <VariableSize>0</VariableSize>
    <HorizontalSpacing>None</HorizontalSpacing>
    <VerticalSpacing>None</VerticalSpacing>
    <CalculateXBlock i:nil="true" />
    <CalculateYBlock i:nil="true" />
    <ModelBlock>
      <_><![CDATA[
(
  static Self
  (
    static Player
    static Self
    objpath ".Var[bagid].Int"
  )
  call "Inventorygetbag"
  static Self
  objpath ".Var[startslot].Int"
  static Self
  objpath ".Var[endslot].Int"
)
call "Geninventorybaggetslotsinrange"
]]></_>
      <Statement>
        <ExprLine>
          <DescStr></DescStr>
          <OrigStr> GenInventoryBagGetSlotsInRange(Self, InventoryGetBag(Player, Self.Var[BagID].Int), Self.Var[StartSlot].Int, Self.Var[EndSlot].Int) </OrigStr>
        </ExprLine>
      </Statement>
      <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
      <Cost>0</Cost>
    </ModelBlock>
    <FilterBlock i:nil="true" />
  </Base>
  <StateDef />
  <ComplexStateDef />
  <uiComplexStates>0</uiComplexStates>
  <Last i:nil="true" />
  <Timer />
  <Message>
    <UIGenMessage>
      <Name>Nextpage</Name>
      <Command />
      <ExpressionBlock>
        <_><![CDATA[
(
  static Player
  static Self
  objpath ".Var[bagid].Int"
)
call "Inventorygetbag"
retifzero
static Self
objpath ".Var[endslot].Int"
(
  static Player
  static Self
  objpath ".Var[bagid].Int"
)
call "Inventorygetbagmaxslots"
less
retifzero
(
  static Self
  str "Startslot"
  static Self
  objpath ".Var[endslot].Int"
  int 1
  add
)
call "Gensetvalue"
;
(
  static Self
  str "Endslot"
  static Self
  objpath ".Var[startslot].Int"
  static Self
  objpath ".Var[slotcap].Int"
  add
  int 1
  sub
)
call "Gensetvalue"
]]></_>
        <Statement>
          <ExprLine>
            <DescStr></DescStr>
            <OrigStr>
			if (InventoryGetBag(Player, Self.Var[BagID].Int))
				if (Self.Var[EndSlot].Int &lt; InventoryGetBagMaxSlots(Player, Self.Var[BagID].Int))
					GenSetValue(Self, "StartSlot", Self.Var[EndSlot].Int + 1);
					GenSetValue(Self, "EndSlot", Self.Var[StartSlot].Int + Self.Var[SlotCap].Int - 1);
				endif
			endif
		</OrigStr>
          </ExprLine>
        </Statement>
        <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
        <Cost>0</Cost>
      </ExpressionBlock>
      <Sound />
      <EnterState />
      <ExitState />
      <ToggleState />
      <CopyParentState />
      <Mutate />
      <Message>
        <UIGenMessagePacket>
          <MessageName>Updatearrows</MessageName>
          <hGen></hGen>
        </UIGenMessagePacket>
      </Message>
      <Set />
      <Focus>0</Focus>
      <Unfocus>0</Unfocus>
      <TooltipFocus>0</TooltipFocus>
      <TooltipUnfocus>0</TooltipUnfocus>
    </UIGenMessage>
    <UIGenMessage>
      <Name>Previouspage</Name>
      <Command />
      <ExpressionBlock>
        <_><![CDATA[
(
  static Player
  static Self
  objpath ".Var[bagid].Int"
)
call "Inventorygetbag"
retifzero
static Self
objpath ".Var[startslot].Int"
int 0
greater
retifzero
(
  static Self
  str "Startslot"
  static Self
  objpath ".Var[startslot].Int"
  static Self
  objpath ".Var[slotcap].Int"
  sub
)
call "Gensetvalue"
;
(
  static Self
  str "Endslot"
  static Self
  objpath ".Var[startslot].Int"
  static Self
  objpath ".Var[slotcap].Int"
  add
  int 1
  sub
)
call "Gensetvalue"
]]></_>
        <Statement>
          <ExprLine>
            <DescStr></DescStr>
            <OrigStr>
			if (InventoryGetBag(Player, Self.Var[BagID].Int))
				if (Self.Var[StartSlot].Int &gt; 0)
					GenSetValue(Self, "StartSlot", Self.Var[StartSlot].Int - Self.Var[SlotCap].Int);
					GenSetValue(Self, "EndSlot", Self.Var[StartSlot].Int + Self.Var[SlotCap].Int - 1);
				endif
			endif
		</OrigStr>
          </ExprLine>
        </Statement>
        <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
        <Cost>0</Cost>
      </ExpressionBlock>
      <Sound />
      <EnterState />
      <ExitState />
      <ToggleState />
      <CopyParentState />
      <Mutate />
      <Message>
        <UIGenMessagePacket>
          <MessageName>Updatearrows</MessageName>
          <hGen></hGen>
        </UIGenMessagePacket>
      </Message>
      <Set />
      <Focus>0</Focus>
      <Unfocus>0</Unfocus>
      <TooltipFocus>0</TooltipFocus>
      <TooltipUnfocus>0</TooltipUnfocus>
    </UIGenMessage>
    <UIGenMessage>
      <Name>Updatearrows</Name>
      <Command />
      <ExpressionBlock>
        <_><![CDATA[
(
  static Player
  static Self
  objpath ".Var[bagid].Int"
)
call "Inventorygetbag"
jz label_40
(
  (
    str "Inventory_Bank_Leftarrow"
  )
  call "Gen"
  ident "Disabled"
  static Self
  objpath ".Var[startslot].Int"
  int 0
  equals
)
call "Gensetstate"
;
(
  (
    str "Inventory_Bank_Rightarrow"
  )
  call "Gen"
  ident "Disabled"
  static Self
  objpath ".Var[endslot].Int"
  (
    static Player
    static Self
    objpath ".Var[bagid].Int"
  )
  call "Inventorygetbagmaxslots"
  int 1
  sub
  notless
)
call "Gensetstate"
return
label_40:
(
    (
      str "Inventory_Bank_Leftarrow"
    )
    call "Gen"
    ident "Disabled"
    int 1
)
call "Gensetstate"
;
(
    (
      str "Inventory_Bank_Rightarrow"
    )
    call "Gen"
    ident "Disabled"
    int 1
)
call "Gensetstate"
]]></_>
        <Statement>
          <ExprLine>
            <DescStr></DescStr>
            <OrigStr>
			if (InventoryGetBag(Player, Self.Var[BagID].Int))
				GenSetState(Gen("Inventory_Bank_LeftArrow"), Disabled, Self.Var[StartSlot].Int = 0);
				GenSetState(Gen("Inventory_Bank_RightArrow"), Disabled, Self.Var[EndSlot].Int &gt;= InventoryGetBagMaxSlots(Player, Self.Var[BagID].Int) - 1);
			else
				GenSetState(Gen("Inventory_Bank_LeftArrow"), Disabled, 1);
				GenSetState(Gen("Inventory_Bank_RightArrow"), Disabled, 1);
			endif
			</OrigStr>
          </ExprLine>
        </Statement>
        <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
        <Cost>0</Cost>
      </ExpressionBlock>
      <Sound />
      <EnterState />
      <ExitState />
      <ToggleState />
      <CopyParentState />
      <Mutate />
      <Message />
      <Set />
      <Focus>0</Focus>
      <Unfocus>0</Unfocus>
      <TooltipFocus>0</TooltipFocus>
      <TooltipUnfocus>0</TooltipUnfocus>
    </UIGenMessage>
  </Message>
  <bfStates>
    <a:int>0</a:int>
    <a:int>0</a:int>
    <a:int>0</a:int>
    <a:int>0</a:int>
    <a:int>0</a:int>
    <a:int>0</a:int>
  </bfStates>
  <BeforeCreate>
    <Command />
    <ExpressionBlock>
      <_><![CDATA[
(
  static Self
  str "BagID"
  ident "Bagidbank"
)
call "Gensetvalue"
]]></_>
      <Statement>
        <ExprLine>
          <DescStr></DescStr>
          <OrigStr> GenSetValue(Self, "BagID", BagIDBank); </OrigStr>
        </ExprLine>
      </Statement>
      <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
      <Cost>0</Cost>
    </ExpressionBlock>
    <Sound />
    <EnterState />
    <ExitState />
    <ToggleState />
    <CopyParentState />
    <Mutate />
    <Message>
      <UIGenMessagePacket>
        <MessageName>Updatearrows</MessageName>
        <hGen></hGen>
      </UIGenMessagePacket>
    </Message>
    <Set />
    <Focus>0</Focus>
    <Unfocus>0</Unfocus>
    <TooltipFocus>0</TooltipFocus>
    <TooltipUnfocus>0</TooltipUnfocus>
  </BeforeCreate>
  <AfterCreate i:nil="true" />
  <PointerUpdate i:nil="true" />
  <BeforeUpdate>
    <Command />
    <ExpressionBlock i:nil="true" />
    <Sound />
    <EnterState />
    <ExitState />
    <ToggleState />
    <CopyParentState />
    <Mutate />
    <Message>
      <UIGenMessagePacket>
        <MessageName>Updatearrows</MessageName>
        <hGen></hGen>
      </UIGenMessagePacket>
    </Message>
    <Set />
    <Focus>0</Focus>
    <Unfocus>0</Unfocus>
    <TooltipFocus>0</TooltipFocus>
    <TooltipUnfocus>0</TooltipUnfocus>
  </BeforeUpdate>
  <BeforeResult i:nil="true" />
  <BeforeHide i:nil="true" />
  <FileName>Ui/Gens/Windows/Inventory/Bank.Uigen</FileName>
  <Var>
    <UIGenVarTypeGlob>
      <GlobName>Endslot</GlobName>
      <State>RightMouseDownOutside</State>
      <Float>0</Float>
      <String></String>
    </UIGenVarTypeGlob>
    <UIGenVarTypeGlob>
      <GlobName>MaxHeight</GlobName>
      <State>200</State>
      <Float>0</Float>
      <String></String>
    </UIGenVarTypeGlob>
    <UIGenVarTypeGlob>
      <GlobName>MaxWidth</GlobName>
      <State>350</State>
      <Float>0</Float>
      <String></String>
    </UIGenVarTypeGlob>
    <UIGenVarTypeGlob>
      <GlobName>Slotcap</GlobName>
      <State>LeftMouseDrag</State>
      <Float>0</Float>
      <String></String>
    </UIGenVarTypeGlob>
    <UIGenVarTypeGlob>
      <GlobName>Startslot</GlobName>
      <State>0</State>
      <Float>0</Float>
      <String></String>
    </UIGenVarTypeGlob>
  </Var>
  <CopyVar />
  <JailCell></JailCell>
  <Window></Window>
  <SpriteCache i:nil="true" />
  <FinalScale>1</FinalScale>
  <FinalAlpha>255</FinalAlpha>
  <Layer>0</Layer>
  <Priority>0</Priority>
  <Clone>0</Clone>
  <UseEstimatedSize>0</UseEstimatedSize>
  <NeedsRebuild>0</NeedsRebuild>
  <Popup>0</Popup>
  <TopLevelChildren>0</TopLevelChildren>
  <IsRoot>0</IsRoot>
</UIGen>